"""empty message

Revision ID: 518e9f92f021
Revises: None
Create Date: 2016-07-07 12:26:04.083667

"""

# revision identifiers, used by Alembic.
revision = '518e9f92f021'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('districts',
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('_password', sa.String(length=128), nullable=False),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('urole', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('activity_logs',
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('log_date_start', sa.DateTime(), nullable=True),
    sa.Column('log_date_end', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity_contact', sa.String(length=255), nullable=True),
    sa.Column('event_costs', sa.String(length=255), nullable=True),
    sa.Column('report_notes', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('district_identifier',
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('report_urls',
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schools',
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('activity_type_identifier_al',
    sa.Column('activity_type_id', sa.Integer(), nullable=True),
    sa.Column('activity_log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_log_id'], ['activity_logs.id'], ),
    sa.ForeignKeyConstraint(['activity_type_id'], ['activity_types.id'], )
    )
    op.create_table('district_identifier_al',
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('activity_log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_log_id'], ['activity_logs.id'], ),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], )
    )
    op.create_table('expense_sheets',
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity_log_id', sa.Integer(), nullable=True),
    sa.Column('to_mileage', sa.Integer(), nullable=True),
    sa.Column('from_mileage', sa.Integer(), nullable=True),
    sa.Column('mileage_reimbursement', sa.Integer(), nullable=True),
    sa.Column('itemized_meals', sa.String(length=255), nullable=True),
    sa.Column('hotel_reimbursement', sa.String(length=255), nullable=True),
    sa.Column('cell_phone_reimbursement', sa.String(length=255), nullable=True),
    sa.Column('other_reimbursement', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['activity_log_id'], ['activity_logs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school_identifier',
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('school_identifier_al',
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('activity_log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_log_id'], ['activity_logs.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], )
    )
    op.create_table('activity_type_identifier_es',
    sa.Column('activity_type_id', sa.Integer(), nullable=True),
    sa.Column('expense_sheet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_type_id'], ['activity_types.id'], ),
    sa.ForeignKeyConstraint(['expense_sheet_id'], ['expense_sheets.id'], )
    )
    op.create_table('district_identifier_es',
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('expense_sheet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['expense_sheet_id'], ['expense_sheets.id'], )
    )
    op.create_table('school_identifier_es',
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('expense_sheet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['expense_sheet_id'], ['expense_sheets.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], )
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('school_identifier_es')
    op.drop_table('district_identifier_es')
    op.drop_table('activity_type_identifier_es')
    op.drop_table('school_identifier_al')
    op.drop_table('school_identifier')
    op.drop_table('expense_sheets')
    op.drop_table('district_identifier_al')
    op.drop_table('activity_type_identifier_al')
    op.drop_table('schools')
    op.drop_table('report_urls')
    op.drop_table('district_identifier')
    op.drop_table('activity_logs')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('districts')
    op.drop_table('activity_types')
    ### end Alembic commands ###
